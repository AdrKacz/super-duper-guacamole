# This is a workflow to run test on Front End and Back End and upload coverage

name: Run Tests

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  chat-backend-test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - name: Chat Backend- Install modules 
        working-directory: ./chat-backend
        run: yarn
      - name: Chat Backend- Run Test
        working-directory: ./chat-backend
        run: yarn test
      - name: Chat Backend- Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          flags: chat-backend
  chat-application-test:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
      - name: Chat Application - Get Packages
        working-directory: ./chat-application
        run: flutter pub get
      - name: Chat Application - Add All Files To Coverage
        working-directory: ./chat-application
        shell: bash
        run: |
            file=test/coverage_helper_test.dart
            echo "// More details: https://github.com/flutter/flutter/issues/27997"
            echo "// Helper file to make coverage work for all dart files\n" > $file
            echo "// ignore_for_file: unused_import" >> $file
            find lib -name '*.dart' | cut -c4- | awk -v package=$1 '{printf "import '\''package:%s%s'\'';\n", package, $1}' >> $file
            echo "\nvoid main(){}" >> $file
      - name: Chat Application - Run Test
        working-directory: ./chat-application
        run: flutter test --coverage
      - name: Chat Application - Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          flags: chat-application