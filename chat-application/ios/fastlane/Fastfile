# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Comment the line if you don't want fastlane to automatically update itself
update_fastlane

fastlane_require 'yaml'

default_platform(:ios)

platform :ios do
  desc "Publish the latest TestFlight version to the App Store"
  lane :publish do
    ensure_env_vars(
      env_vars: ["APP_STORE_CONNECT_API_KEY_KEY_ID", "APP_STORE_CONNECT_API_KEY_ISSUER_ID", "APP_STORE_CONNECT_API_KEY_KEY"]
    )

    # set api key
    app_store_connect_api_key

    # get build number 
    latest_testflight_build_number(
      app_identifier: "com.awama.awa.dev",
    )

    app_store_build_number(
      app_identifier: "com.awama.awa.dev",
    )

    if lane_context[SharedValues::LATEST_BUILD_NUMBER] >= lane_context[SharedValues::LATEST_TESTFLIGHT_BUILD_NUMBER]
      puts "Latest version already in App Store"
      next
    end

    app_store_build_number(
      app_identifier: "com.awama.awa.dev",
      live: false
    )
    if lane_context[SharedValues::LATEST_BUILD_NUMBER] >= lane_context[SharedValues::LATEST_TESTFLIGHT_BUILD_NUMBER]
      puts "Latest version already in review"
      next
    end

    puts "I will upload latest TestFlight version to App Store"
    deliver(
      app_version: lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION].to_s,
      build_number: lane_context[SharedValues::LATEST_TESTFLIGHT_BUILD_NUMBER].to_s,
      submission_information: {
        add_id_info_uses_idfa: false
      },
    )
  
    # create release
    puts "I will create GitHub release"
    release
  end

  desc "Verify the version is highter than the latest in the App Store"
  lane :verify_version do
    ensure_env_vars(
      env_vars: ["APP_STORE_CONNECT_API_KEY_KEY_ID", "APP_STORE_CONNECT_API_KEY_ISSUER_ID", "APP_STORE_CONNECT_API_KEY_KEY"]
    )

    # set api key
    app_store_connect_api_key

    # get build number 
    app_store_build_number(
      app_identifier: "com.awama.awa.dev",
    )

    # get pubspec
    pubspec = YAML.load_file("../../pubspec.yaml")

    puts "Pubspec version"
    puts pubspec["version"]
    
    puts "iOS live version"
    puts lane_context[SharedValues::LATEST_VERSION]

    if Gem::Version.new(pubspec["version"]) <= Gem::Version.new(lane_context[SharedValues::LATEST_VERSION])
      puts "Latest version is #{lane_context[SharedValues::LATEST_VERSION]} but you try to push #{pubspec["version"]}"
      exit 1
    else
      puts "Latest version is #{lane_context[SharedValues::LATEST_VERSION]} and you push #{pubspec["version"]}"
    end
  end
end

lane :release do
  # get pubspec
  pubspec = YAML.load_file("../../pubspec.yaml")

  # get release note
  release_notes_content = (File.read("metadata/fr-FR/release_notes.txt") rescue "No changelog provided")
  puts "Release to GitHub v.#{pubspec["version"]}\n--- Description ---\n#{release_notes_content}\n--- --- ---"

  # create release
  set_github_release(
    repository_name: "AdrKacz/super-duper-guacamole",
    tag_name: pubspec["version"],
    name: "Awa v.#{pubspec["version"]}",
    description: release_notes_content,
  )
end